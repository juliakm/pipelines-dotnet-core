name: Push a NuGet package to Azure Artifacts or GitHub Package Registry

on:
  push:
    branches:
      - master

permissions:
  id-token: write # Require write permission to Fetch an OIDC token.
  contents: read # Require read permission to access the repository contents.

env:
  AZURE_ARTIFACTS_FEED_URL: https://pkgs.dev.azure.com/jukullam/nuget-artifact/_packaging/Fabrikam_FeedThree/nuget/v3/index.json    
  BUILD_CONFIGURATION: 'Release'    # set this to the appropriate build configuration
  DOTNET_VERSION: '6.0' 
  NuGetDirectory: ${{ github.workspace}}/nuget
  VSS_NUGET_URI_PREFIXES: https://pkgs.dev.azure.com/jukullam/


jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repo
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Azure CLI Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # Setup .NET Core SDK
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      # Run dotnet build and package
      - name: dotnet build and test
        run: |
          dotnet restore
          dotnet build --configuration '${{ env.BUILD_CONFIGURATION }}'
          dotnet test --configuration '${{ env.BUILD_CONFIGURATION }}'

    # Create the NuGet package in the folder from the environment variable NuGetDirectory
      - run: dotnet pack --configuration Release --output ${{ env.NuGetDirectory }}

    # Publish the NuGet package as an artifact, so they can be used in the following jobs
      - uses: actions/upload-artifact@v3
        with:
          name: nuget
          if-no-files-found: error
          retention-days: 7
          path: ${{ env.NuGetDirectory }}/*.nupkg

  az-artifacts-build-and-deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      # Checkout the repo
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Azure CLI Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - uses: actions/download-artifact@v3
        with:
          name: nuget
          path: ${{ env.NuGetDirectory }}

      # Setup .NET Core SDK
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
          source-url: ${{ env.AZURE_ARTIFACTS_FEED_URL }}
        env:
          NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}

      # Install credential provider for Azure Artifacts
      - name: Install credential provider for Azure Artifacts
        run: sh -c "$(curl -fsSL https://aka.ms/install-artifacts-credprovider.sh)"

      - name: Extract access token
        run: |
            accessToken=$(az account get-access-token --query accessToken --resource 499b84ac-1321-427f-aa17-267ca6975798 -o tsv)
            echo "::add-mask::$accessToken"
            echo "ACCESS_TOKEN=$accessToken" >> $GITHUB_ENV

      - name: Configure authentication provider to use Azure DevOps token
        run: |
          echo "VSS_NUGET_ACCESSTOKEN=$ACCESS_TOKEN" >> $GITHUB_ENV

      # Run dotnet build and package
      - name: dotnet build and publish
        run: |
          dotnet restore
          dotnet build --configuration '${{ env.BUILD_CONFIGURATION }}'
          dotnet pack -c '${{ env.BUILD_CONFIGURATION }}' --version-suffix $GITHUB_RUN_ID

      # Publish the package to Azure Artifacts
      - name: 'dotnet publish'
        # env:
        #   VSS_NUGET_EXTERNAL_FEED_ENDPOINTS: '{"endpointCredentials": [{"endpoint": ${{ env.AZURE_ARTIFACTS_FEED_URL }}, "username": "optional", "password": "${{ env.ACCESS_TOKEN }}"}]}'
       # run: echo $VSS_NUGET_EXTERNAL_FEED_ENDPOINTS
        run: dotnet nuget push ${{ env.NuGetDirectory }}/*.nupkg -ApiKey AzureDevOps


      # - name: Push NuGet package to Azure Artifacts
      #   env:
      #     AZURE_ARTIFACTS_FEED_URL: ${{ secrets.AZURE_ARTIFACTS_FEED_URL }}
      #   run: |
      #     VERSION="1.0.0-${{ github.run_id }}"
      #     az artifacts universal publish --organization https://dev.azure.com/jukullam --project="nuget-artifact" --scope project --feed  "Fabrikam_FeedThree" --name nuget --version $VERSION --path ${{ env.NuGetDirectory }}/*.nupkg
